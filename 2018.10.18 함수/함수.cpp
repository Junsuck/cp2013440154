#include <stdio.h>

int gVar = 100; ///전역변수(global variable): 함수 전체에서 gVar라는 함수를 사용 가능, 하지만 실제 코딩에는 사용하지말 것!
//함수 sum(),      지역변수(local variable)
//입력 : 두 정수
//출력 : 두 정수의 합
//부수효과: 없음
int sum(int a, int b){ //함수 선언 : 1. sum은 함수의 이름 2. 매개변수의 갯수(a,b) 3.각 매개변수의 자료형(int,int) 4. 반환값의 자료형(반환형) --> 함수호출하기 위해 필요한 정보
	static int c;  ///함수본체( 중괄호 안 {}) , 유효 범위 : 소스코드 내에서 변수가 유효한 범위(ex. 왼쪽 영역에서는 x변수 사용 불가능), static : c를 위한 공간이 처음부터 끝까지 확보됨
	c = a + b; a = 100;
	return c;
} //////////////////// 함수정의

//함수 : goodPrint()
//입력: 없음
//출력 : 없음
//부수효과 : 화면에 good 출력
void goodPrint(){ ///숫자안쓰면 void를 많이 쓴다.
	printf("good\n");
}

////매개변수의 전달: 함수호출 시 
///1. 매개변수를 복사하기 위해 메모리 영역이 새로 생성된다.
///2. 매개변수의 값이 새로 생성된 메모리 영역으로 복사된다.
///3. 함수 내에서는 새로 생성된 메모리영역을 접근한다.
///4. 함수가 종료되면 생성된 메모리 영역이 소멸된다. 

int main() {
////break point(빨간점), 로컬디버거 실행시 노란화살표는 딱 그전까지 실행했음을 의미
	int x = 10, y = 20, z;
	z = sum( x , y );  ////함수호출
	printf("z = %d\n",z);
	goodPrint();

	return 0;
}